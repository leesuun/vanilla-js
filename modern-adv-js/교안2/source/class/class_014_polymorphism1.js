// 자바스크립트 클래스 - 다형성( Polymorphism )


// [1] : 개념
// 다형성 --> Polymorphism --> 다양한 형태를 가지는 성질.
// 문법적 --> 어떤 기능이나 동작을 구현시 --> 설계적인 부분과 구현(동작/기능)되는 부분을 분리 --> 객체별로 다양하게 사용할 수 있게 하는 것.
// 부모(super) 클래스를 상속받은 자식(sub) 클래스의 인스턴스(객체) 별로 적절한 메서드를 사용하게 하는 것.
// 즉, 이렇게 되면 "설계 부분"과 "구현 부분"은 --> 1:N 관계가 성립.
// 즉, 부모가 잘 설계해놓은 것을 자식이 받아서 설계대로 구현한 후 각 인스턴스(객체)별로 다양하게 사용하는 것.

// 일상에서의 다형성 예 --> 돼지코 전원 케이블, USB 규격...

// 다른 전통적인 언어들의 클래스와 ES6 클래스의 차이점.
// 이러한 다형성을 지원할 수 있는 문법적인 기반이 안되어 있음. --> 인터페이스, 추상클래스, 타입에 대한 개념.
// 따라서, ES6 클래스에서는 다형성을 전통적인 언어들에서와 같이 문법적인 측면에서 구현하기는 조금 어렵다. --> 흉내!
// 설계부분 --> 인터페이스, 추상클래스 --> 보통은 강제하고 구현하게 함 --> ES6 지원 X, 강제하지도 X --> 흉내!
// "흉내"라고 무시하면 안된다. --> 다형성 개념을 적용 --> 보다 편리하고 쉽게 코딩 --> 다른 언어의 OOP를 이해하는데도 도움.






